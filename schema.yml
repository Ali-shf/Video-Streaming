openapi: 3.0.3
info:
  title: video_streamer API
  version: 1.0.0
  description: platform for streaming videos
paths:
  /api/accounts/login/:
    post:
      operationId: accounts_login_create
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/accounts/logout/:
    post:
      operationId: accounts_logout_create
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/profile/:
    get:
      operationId: accounts_profile_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/accounts/profile/update/:
    put:
      operationId: accounts_profile_update_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
          description: ''
    patch:
      operationId: accounts_profile_update_partial_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
          description: ''
  /api/accounts/refresh/:
    post:
      operationId: accounts_refresh_create
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/accounts/register/:
    post:
      operationId: accounts_register_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegistrationModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegistrationModel'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationModel'
          description: ''
  /api/accounts/user/delete/:
    delete:
      operationId: accounts_user_delete_destroy
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/user/detail/:
    get:
      operationId: accounts_user_detail_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/accounts/user/role/:
    patch:
      operationId: accounts_user_role_partial_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
          description: ''
  /api/accounts/user/update/:
    put:
      operationId: accounts_user_update_update
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
          description: ''
  /api/accounts/users/:
    get:
      operationId: accounts_users_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/history/history/:
    get:
      operationId: history_history_list
      tags:
      - history
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WatchHistory'
          description: ''
    post:
      operationId: history_history_create
      tags:
      - history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchHistory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchHistory'
          description: ''
  /api/history/history/{id}/:
    get:
      operationId: history_history_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - history
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchHistory'
          description: ''
    put:
      operationId: history_history_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchHistory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchHistory'
          description: ''
    patch:
      operationId: history_history_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWatchHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWatchHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWatchHistory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchHistory'
          description: ''
    delete:
      operationId: history_history_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - history
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/payments/transactions/:
    get:
      operationId: payments_transactions_list
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
          description: ''
    post:
      operationId: payments_transactions_create
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/payments/transactions/{id}/:
    get:
      operationId: payments_transactions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    put:
      operationId: payments_transactions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    patch:
      operationId: payments_transactions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    delete:
      operationId: payments_transactions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/subscriptions/plans/:
    get:
      operationId: subscriptions_plans_list
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionPlan'
          description: ''
  /api/subscriptions/plans/{id}/:
    get:
      operationId: subscriptions_plans_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription plan.
        required: true
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlan'
          description: ''
  /api/subscriptions/subscriptions/:
    get:
      operationId: subscriptions_subscriptions_list
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
          description: ''
    post:
      operationId: subscriptions_subscriptions_create
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/subscriptions/subscriptions/{id}/:
    get:
      operationId: subscriptions_subscriptions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    put:
      operationId: subscriptions_subscriptions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    patch:
      operationId: subscriptions_subscriptions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    delete:
      operationId: subscriptions_subscriptions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - subscriptions
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/videos/videos/:
    get:
      operationId: videos_videos_list
      description: |-
        - Anyone can view public videos
        - Only admins can create, update, or delete videos
      tags:
      - videos
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
          description: ''
    post:
      operationId: videos_videos_create
      description: |-
        - Anyone can view public videos
        - Only admins can create, update, or delete videos
      tags:
      - videos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoUpload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoUpload'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUpload'
          description: ''
  /api/videos/videos/{id}/:
    get:
      operationId: videos_videos_retrieve
      description: |-
        - Anyone can view public videos
        - Only admins can create, update, or delete videos
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    put:
      operationId: videos_videos_update
      description: |-
        - Anyone can view public videos
        - Only admins can create, update, or delete videos
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - videos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoUpload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoUpload'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUpload'
          description: ''
    patch:
      operationId: videos_videos_partial_update
      description: |-
        - Anyone can view public videos
        - Only admins can create, update, or delete videos
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - videos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideoUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVideoUpload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVideoUpload'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUpload'
          description: ''
    delete:
      operationId: videos_videos_destroy
      description: |-
        - Anyone can view public videos
        - Only admins can create, update, or delete videos
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/videos/videos/{video_pk}/comments/:
    get:
      operationId: videos_videos_comments_list
      description: |-
        - Authenticated users can comment only on public videos
        - Only the comment owner or admin can update/delete their comment
      parameters:
      - in: path
        name: video_pk
        schema:
          type: integer
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: videos_videos_comments_create
      description: |-
        - Authenticated users can comment only on public videos
        - Only the comment owner or admin can update/delete their comment
      parameters:
      - in: path
        name: video_pk
        schema:
          type: integer
        required: true
      tags:
      - videos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
components:
  schemas:
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        text:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - text
      - user
    NameEnum:
      enum:
      - B
      - P
      - A
      type: string
      description: |-
        * `B` - Basic
        * `P` - Pro
        * `A` - Annual
    PatchedSubscription:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        plan:
          allOf:
          - $ref: '#/components/schemas/SubscriptionPlan'
          readOnly: true
        plan_id:
          type: integer
          writeOnly: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        is_active:
          type: boolean
    PatchedTransaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        ref_code:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUpdateUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    PatchedVideoUpload:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
        file_url:
          type: string
        thumbnail:
          type: string
          nullable: true
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Duration in seconds
        is_public:
          type: boolean
    PatchedWatchHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        video:
          type: integer
        watched_at:
          type: string
          format: date-time
          readOnly: true
        progress:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
    PaymentStatusEnum:
      enum:
      - PEN
      - SUC
      - FAIL
      - REF
      type: string
      description: |-
        * `PEN` - Pending
        * `SUC` - Success
        * `FAIL` - Failed
        * `REF` - Refunded
    RegistrationModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
      required:
      - confirm_password
      - email
      - id
      - password
      - username
    Subscription:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        plan:
          allOf:
          - $ref: '#/components/schemas/SubscriptionPlan'
          readOnly: true
        plan_id:
          type: integer
          writeOnly: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        is_active:
          type: boolean
      required:
      - end_date
      - id
      - plan
      - plan_id
      - start_date
      - user
    SubscriptionPlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          $ref: '#/components/schemas/NameEnum'
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        duration_days:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        description:
          type: string
      required:
      - duration_days
      - id
      - name
      - price
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    Transaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        ref_code:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - id
      - ref_code
      - user
    UpdateUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - email
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        date_joined:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time
          nullable: true
      required:
      - email
      - id
      - username
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - email
      - id
      - is_staff
      - username
    Video:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uploader:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        file_url:
          type: string
        thumbnail:
          type: string
          nullable: true
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Duration in seconds
        upload_date:
          type: string
          format: date-time
          readOnly: true
        is_public:
          type: boolean
        views_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        likes_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          readOnly: true
      required:
      - comments
      - file_url
      - id
      - title
      - upload_date
      - uploader
    VideoUpload:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
        file_url:
          type: string
        thumbnail:
          type: string
          nullable: true
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Duration in seconds
        is_public:
          type: boolean
      required:
      - file_url
      - title
    WatchHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        video:
          type: integer
        watched_at:
          type: string
          format: date-time
          readOnly: true
        progress:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - id
      - user
      - video
      - watched_at
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
